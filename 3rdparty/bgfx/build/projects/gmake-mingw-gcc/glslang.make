# GNU Make project makefile autogenerated by GENie
ifndef config
  config=debug32
endif

ifndef verbose
  SILENT = @
endif

SHELLTYPE := msdos
ifeq (,$(ComSpec)$(COMSPEC))
  SHELLTYPE := posix
endif
ifeq (/bin,$(findstring /bin,$(SHELL)))
  SHELLTYPE := posix
endif
ifeq (/bin,$(findstring /bin,$(MAKESHELL)))
  SHELLTYPE := posix
endif

ifeq (posix,$(SHELLTYPE))
  MKDIR = $(SILENT) mkdir -p "$(1)"
  COPY  = $(SILENT) cp -fR "$(1)" "$(2)"
  RM    = $(SILENT) rm -f "$(1)"
else
  MKDIR = $(SILENT) mkdir "$(subst /,\\,$(1))" 2> nul || exit 0
  COPY  = $(SILENT) copy /Y "$(subst /,\\,$(1))" "$(subst /,\\,$(2))"
  RM    = $(SILENT) del /F "$(subst /,\\,$(1))" 2> nul || exit 0
endif

CC  = $(MINGW)/bin/x86_64-w64-mingw32-gcc
CXX = $(MINGW)/bin/x86_64-w64-mingw32-g++
AR  = $(MINGW)/bin/ar

ifndef RESCOMP
  ifdef WINDRES
    RESCOMP = $(WINDRES)
  else
    RESCOMP = windres
  endif
endif

MAKEFILE = glslang.make

ifeq ($(config),debug32)
  OBJDIR              = ../../win32_mingw-gcc/obj/x32/Debug/glslang
  TARGETDIR           = ../../win32_mingw-gcc/bin
  TARGET              = $(TARGETDIR)/libglslangDebug.a
  DEFINES            += -D__STDC_LIMIT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_CONSTANT_MACROS -D_DEBUG -DWIN32 -DMINGW_HAS_SECURE_API=1 -DENABLE_OPT=1 -DENABLE_HLSL=1
  INCLUDES           += -I"../../../../bx/include/compat/mingw" -I"../../../3rdparty/glslang" -I"../../../3rdparty/spirv-tools/include" -I"../../../3rdparty/spirv-tools/source"
  ALL_CPPFLAGS       += $(CPPFLAGS) -MMD -MP -MP $(DEFINES) $(INCLUDES)
  ALL_ASMFLAGS       += $(ASMFLAGS) $(CFLAGS) $(ALL_CPPFLAGS) $(ARCH) -Wall -Wextra -ffast-math -fomit-frame-pointer -g -m32 -Wshadow -Wunused-value -fdata-sections -ffunction-sections -msse2 -Wundef -m32 -mstackrealign -Wno-ignored-qualifiers -Wno-implicit-fallthrough -Wno-missing-field-initializers -Wno-reorder -Wno-return-type -Wno-shadow -Wno-sign-compare -Wno-switch -Wno-undef -Wno-unknown-pragmas -Wno-unused-function -Wno-unused-parameter -Wno-unused-variable -fno-strict-aliasing
  ALL_CFLAGS         += $(CFLAGS) $(ALL_CPPFLAGS) $(ARCH) -Wall -Wextra -ffast-math -fomit-frame-pointer -g -m32 -Wshadow -Wunused-value -fdata-sections -ffunction-sections -msse2 -Wundef -m32 -mstackrealign -Wno-ignored-qualifiers -Wno-implicit-fallthrough -Wno-missing-field-initializers -Wno-reorder -Wno-return-type -Wno-shadow -Wno-sign-compare -Wno-switch -Wno-undef -Wno-unknown-pragmas -Wno-unused-function -Wno-unused-parameter -Wno-unused-variable -fno-strict-aliasing
  ALL_CXXFLAGS       += $(CXXFLAGS) $(CFLAGS) $(ALL_CPPFLAGS) $(ARCH) -Wall -Wextra -ffast-math -fomit-frame-pointer -g -m32 -std=c++14 -fno-rtti -fno-exceptions -Wshadow -Wunused-value -fdata-sections -ffunction-sections -msse2 -Wundef -m32 -mstackrealign -Wno-ignored-qualifiers -Wno-implicit-fallthrough -Wno-missing-field-initializers -Wno-reorder -Wno-return-type -Wno-shadow -Wno-sign-compare -Wno-switch -Wno-undef -Wno-unknown-pragmas -Wno-unused-function -Wno-unused-parameter -Wno-unused-variable -fno-strict-aliasing
  ALL_OBJCFLAGS      += $(CFLAGS) $(ALL_CPPFLAGS) $(ARCH) -Wall -Wextra -ffast-math -fomit-frame-pointer -g -m32 -Wshadow -Wunused-value -fdata-sections -ffunction-sections -msse2 -Wundef -m32 -mstackrealign -Wno-ignored-qualifiers -Wno-implicit-fallthrough -Wno-missing-field-initializers -Wno-reorder -Wno-return-type -Wno-shadow -Wno-sign-compare -Wno-switch -Wno-undef -Wno-unknown-pragmas -Wno-unused-function -Wno-unused-parameter -Wno-unused-variable -fno-strict-aliasing
  ALL_OBJCPPFLAGS    += $(CXXFLAGS) $(CFLAGS) $(ALL_CPPFLAGS) $(ARCH) -Wall -Wextra -ffast-math -fomit-frame-pointer -g -m32 -std=c++14 -fno-rtti -fno-exceptions -Wshadow -Wunused-value -fdata-sections -ffunction-sections -msse2 -Wundef -m32 -mstackrealign -Wno-ignored-qualifiers -Wno-implicit-fallthrough -Wno-missing-field-initializers -Wno-reorder -Wno-return-type -Wno-shadow -Wno-sign-compare -Wno-switch -Wno-undef -Wno-unknown-pragmas -Wno-unused-function -Wno-unused-parameter -Wno-unused-variable -fno-strict-aliasing
  ALL_RESFLAGS       += $(RESFLAGS) $(DEFINES) $(INCLUDES)
  ALL_LDFLAGS        += $(LDFLAGS) -L"../../../3rdparty/lib/win32_mingw-gcc" -m32 -Wl,--gc-sections -static -static-libgcc -static-libstdc++
  LIBDEPS            +=
  LDDEPS             +=
  LDRESP              =
  LIBS               += $(LDDEPS)
  EXTERNAL_LIBS      +=
  LINKOBJS            = $(OBJECTS)
  LINKCMD             = $(AR)  -rcs $(TARGET)
  OBJRESP             =
  OBJECTS := \
	$(OBJDIR)/3rdparty/glslang/OGLCompilersDLL/InitializeDll.o \
	$(OBJDIR)/3rdparty/glslang/SPIRV/GlslangToSpv.o \
	$(OBJDIR)/3rdparty/glslang/SPIRV/InReadableOrder.o \
	$(OBJDIR)/3rdparty/glslang/SPIRV/Logger.o \
	$(OBJDIR)/3rdparty/glslang/SPIRV/SPVRemapper.o \
	$(OBJDIR)/3rdparty/glslang/SPIRV/SpvBuilder.o \
	$(OBJDIR)/3rdparty/glslang/SPIRV/SpvPostProcess.o \
	$(OBJDIR)/3rdparty/glslang/SPIRV/SpvTools.o \
	$(OBJDIR)/3rdparty/glslang/SPIRV/disassemble.o \
	$(OBJDIR)/3rdparty/glslang/SPIRV/doc.o \
	$(OBJDIR)/3rdparty/glslang/glslang/GenericCodeGen/CodeGen.o \
	$(OBJDIR)/3rdparty/glslang/glslang/GenericCodeGen/Link.o \
	$(OBJDIR)/3rdparty/glslang/glslang/MachineIndependent/Constant.o \
	$(OBJDIR)/3rdparty/glslang/glslang/MachineIndependent/InfoSink.o \
	$(OBJDIR)/3rdparty/glslang/glslang/MachineIndependent/Initialize.o \
	$(OBJDIR)/3rdparty/glslang/glslang/MachineIndependent/IntermTraverse.o \
	$(OBJDIR)/3rdparty/glslang/glslang/MachineIndependent/Intermediate.o \
	$(OBJDIR)/3rdparty/glslang/glslang/MachineIndependent/ParseContextBase.o \
	$(OBJDIR)/3rdparty/glslang/glslang/MachineIndependent/ParseHelper.o \
	$(OBJDIR)/3rdparty/glslang/glslang/MachineIndependent/PoolAlloc.o \
	$(OBJDIR)/3rdparty/glslang/glslang/MachineIndependent/RemoveTree.o \
	$(OBJDIR)/3rdparty/glslang/glslang/MachineIndependent/Scan.o \
	$(OBJDIR)/3rdparty/glslang/glslang/MachineIndependent/ShaderLang.o \
	$(OBJDIR)/3rdparty/glslang/glslang/MachineIndependent/SymbolTable.o \
	$(OBJDIR)/3rdparty/glslang/glslang/MachineIndependent/Versions.o \
	$(OBJDIR)/3rdparty/glslang/glslang/MachineIndependent/attribute.o \
	$(OBJDIR)/3rdparty/glslang/glslang/MachineIndependent/glslang_tab.o \
	$(OBJDIR)/3rdparty/glslang/glslang/MachineIndependent/intermOut.o \
	$(OBJDIR)/3rdparty/glslang/glslang/MachineIndependent/iomapper.o \
	$(OBJDIR)/3rdparty/glslang/glslang/MachineIndependent/limits.o \
	$(OBJDIR)/3rdparty/glslang/glslang/MachineIndependent/linkValidate.o \
	$(OBJDIR)/3rdparty/glslang/glslang/MachineIndependent/parseConst.o \
	$(OBJDIR)/3rdparty/glslang/glslang/MachineIndependent/pch.o \
	$(OBJDIR)/3rdparty/glslang/glslang/MachineIndependent/preprocessor/Pp.o \
	$(OBJDIR)/3rdparty/glslang/glslang/MachineIndependent/preprocessor/PpAtom.o \
	$(OBJDIR)/3rdparty/glslang/glslang/MachineIndependent/preprocessor/PpContext.o \
	$(OBJDIR)/3rdparty/glslang/glslang/MachineIndependent/preprocessor/PpScanner.o \
	$(OBJDIR)/3rdparty/glslang/glslang/MachineIndependent/preprocessor/PpTokens.o \
	$(OBJDIR)/3rdparty/glslang/glslang/MachineIndependent/propagateNoContraction.o \
	$(OBJDIR)/3rdparty/glslang/glslang/MachineIndependent/reflection.o \
	$(OBJDIR)/3rdparty/glslang/glslang/OSDependent/Unix/ossource.o \
	$(OBJDIR)/3rdparty/glslang/glslang/OSDependent/Web/glslang.js.o \
	$(OBJDIR)/3rdparty/glslang/hlsl/hlslAttributes.o \
	$(OBJDIR)/3rdparty/glslang/hlsl/hlslGrammar.o \
	$(OBJDIR)/3rdparty/glslang/hlsl/hlslOpMap.o \
	$(OBJDIR)/3rdparty/glslang/hlsl/hlslParseHelper.o \
	$(OBJDIR)/3rdparty/glslang/hlsl/hlslParseables.o \
	$(OBJDIR)/3rdparty/glslang/hlsl/hlslScanContext.o \
	$(OBJDIR)/3rdparty/glslang/hlsl/hlslTokenStream.o \
	$(OBJDIR)/3rdparty/glslang/hlsl/pch.o \

  define PREBUILDCMDS
  endef
  define PRELINKCMDS
  endef
  define POSTBUILDCMDS
  endef
endif

ifeq ($(config),release32)
  OBJDIR              = ../../win32_mingw-gcc/obj/x32/Release/glslang
  TARGETDIR           = ../../win32_mingw-gcc/bin
  TARGET              = $(TARGETDIR)/libglslangRelease.a
  DEFINES            += -D__STDC_LIMIT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_CONSTANT_MACROS -DNDEBUG -DWIN32 -DMINGW_HAS_SECURE_API=1 -DENABLE_OPT=1 -DENABLE_HLSL=1
  INCLUDES           += -I"../../../../bx/include/compat/mingw" -I"../../../3rdparty/glslang" -I"../../../3rdparty/spirv-tools/include" -I"../../../3rdparty/spirv-tools/source"
  ALL_CPPFLAGS       += $(CPPFLAGS) -MMD -MP -MP $(DEFINES) $(INCLUDES)
  ALL_ASMFLAGS       += $(ASMFLAGS) $(CFLAGS) $(ALL_CPPFLAGS) $(ARCH) -Wall -Wextra -ffast-math -fomit-frame-pointer -g -O3 -m32 -Wshadow -Wunused-value -fdata-sections -ffunction-sections -msse2 -Wundef -m32 -mstackrealign -Wno-ignored-qualifiers -Wno-implicit-fallthrough -Wno-missing-field-initializers -Wno-reorder -Wno-return-type -Wno-shadow -Wno-sign-compare -Wno-switch -Wno-undef -Wno-unknown-pragmas -Wno-unused-function -Wno-unused-parameter -Wno-unused-variable -fno-strict-aliasing
  ALL_CFLAGS         += $(CFLAGS) $(ALL_CPPFLAGS) $(ARCH) -Wall -Wextra -ffast-math -fomit-frame-pointer -g -O3 -m32 -Wshadow -Wunused-value -fdata-sections -ffunction-sections -msse2 -Wundef -m32 -mstackrealign -Wno-ignored-qualifiers -Wno-implicit-fallthrough -Wno-missing-field-initializers -Wno-reorder -Wno-return-type -Wno-shadow -Wno-sign-compare -Wno-switch -Wno-undef -Wno-unknown-pragmas -Wno-unused-function -Wno-unused-parameter -Wno-unused-variable -fno-strict-aliasing
  ALL_CXXFLAGS       += $(CXXFLAGS) $(CFLAGS) $(ALL_CPPFLAGS) $(ARCH) -Wall -Wextra -ffast-math -fomit-frame-pointer -g -O3 -m32 -std=c++14 -fno-rtti -fno-exceptions -Wshadow -Wunused-value -fdata-sections -ffunction-sections -msse2 -Wundef -m32 -mstackrealign -Wno-ignored-qualifiers -Wno-implicit-fallthrough -Wno-missing-field-initializers -Wno-reorder -Wno-return-type -Wno-shadow -Wno-sign-compare -Wno-switch -Wno-undef -Wno-unknown-pragmas -Wno-unused-function -Wno-unused-parameter -Wno-unused-variable -fno-strict-aliasing
  ALL_OBJCFLAGS      += $(CFLAGS) $(ALL_CPPFLAGS) $(ARCH) -Wall -Wextra -ffast-math -fomit-frame-pointer -g -O3 -m32 -Wshadow -Wunused-value -fdata-sections -ffunction-sections -msse2 -Wundef -m32 -mstackrealign -Wno-ignored-qualifiers -Wno-implicit-fallthrough -Wno-missing-field-initializers -Wno-reorder -Wno-return-type -Wno-shadow -Wno-sign-compare -Wno-switch -Wno-undef -Wno-unknown-pragmas -Wno-unused-function -Wno-unused-parameter -Wno-unused-variable -fno-strict-aliasing
  ALL_OBJCPPFLAGS    += $(CXXFLAGS) $(CFLAGS) $(ALL_CPPFLAGS) $(ARCH) -Wall -Wextra -ffast-math -fomit-frame-pointer -g -O3 -m32 -std=c++14 -fno-rtti -fno-exceptions -Wshadow -Wunused-value -fdata-sections -ffunction-sections -msse2 -Wundef -m32 -mstackrealign -Wno-ignored-qualifiers -Wno-implicit-fallthrough -Wno-missing-field-initializers -Wno-reorder -Wno-return-type -Wno-shadow -Wno-sign-compare -Wno-switch -Wno-undef -Wno-unknown-pragmas -Wno-unused-function -Wno-unused-parameter -Wno-unused-variable -fno-strict-aliasing
  ALL_RESFLAGS       += $(RESFLAGS) $(DEFINES) $(INCLUDES)
  ALL_LDFLAGS        += $(LDFLAGS) -L"../../../3rdparty/lib/win32_mingw-gcc" -m32 -Wl,--gc-sections -static -static-libgcc -static-libstdc++
  LIBDEPS            +=
  LDDEPS             +=
  LDRESP              =
  LIBS               += $(LDDEPS)
  EXTERNAL_LIBS      +=
  LINKOBJS            = $(OBJECTS)
  LINKCMD             = $(AR)  -rcs $(TARGET)
  OBJRESP             =
  OBJECTS := \
	$(OBJDIR)/3rdparty/glslang/OGLCompilersDLL/InitializeDll.o \
	$(OBJDIR)/3rdparty/glslang/SPIRV/GlslangToSpv.o \
	$(OBJDIR)/3rdparty/glslang/SPIRV/InReadableOrder.o \
	$(OBJDIR)/3rdparty/glslang/SPIRV/Logger.o \
	$(OBJDIR)/3rdparty/glslang/SPIRV/SPVRemapper.o \
	$(OBJDIR)/3rdparty/glslang/SPIRV/SpvBuilder.o \
	$(OBJDIR)/3rdparty/glslang/SPIRV/SpvPostProcess.o \
	$(OBJDIR)/3rdparty/glslang/SPIRV/SpvTools.o \
	$(OBJDIR)/3rdparty/glslang/SPIRV/disassemble.o \
	$(OBJDIR)/3rdparty/glslang/SPIRV/doc.o \
	$(OBJDIR)/3rdparty/glslang/glslang/GenericCodeGen/CodeGen.o \
	$(OBJDIR)/3rdparty/glslang/glslang/GenericCodeGen/Link.o \
	$(OBJDIR)/3rdparty/glslang/glslang/MachineIndependent/Constant.o \
	$(OBJDIR)/3rdparty/glslang/glslang/MachineIndependent/InfoSink.o \
	$(OBJDIR)/3rdparty/glslang/glslang/MachineIndependent/Initialize.o \
	$(OBJDIR)/3rdparty/glslang/glslang/MachineIndependent/IntermTraverse.o \
	$(OBJDIR)/3rdparty/glslang/glslang/MachineIndependent/Intermediate.o \
	$(OBJDIR)/3rdparty/glslang/glslang/MachineIndependent/ParseContextBase.o \
	$(OBJDIR)/3rdparty/glslang/glslang/MachineIndependent/ParseHelper.o \
	$(OBJDIR)/3rdparty/glslang/glslang/MachineIndependent/PoolAlloc.o \
	$(OBJDIR)/3rdparty/glslang/glslang/MachineIndependent/RemoveTree.o \
	$(OBJDIR)/3rdparty/glslang/glslang/MachineIndependent/Scan.o \
	$(OBJDIR)/3rdparty/glslang/glslang/MachineIndependent/ShaderLang.o \
	$(OBJDIR)/3rdparty/glslang/glslang/MachineIndependent/SymbolTable.o \
	$(OBJDIR)/3rdparty/glslang/glslang/MachineIndependent/Versions.o \
	$(OBJDIR)/3rdparty/glslang/glslang/MachineIndependent/attribute.o \
	$(OBJDIR)/3rdparty/glslang/glslang/MachineIndependent/glslang_tab.o \
	$(OBJDIR)/3rdparty/glslang/glslang/MachineIndependent/intermOut.o \
	$(OBJDIR)/3rdparty/glslang/glslang/MachineIndependent/iomapper.o \
	$(OBJDIR)/3rdparty/glslang/glslang/MachineIndependent/limits.o \
	$(OBJDIR)/3rdparty/glslang/glslang/MachineIndependent/linkValidate.o \
	$(OBJDIR)/3rdparty/glslang/glslang/MachineIndependent/parseConst.o \
	$(OBJDIR)/3rdparty/glslang/glslang/MachineIndependent/pch.o \
	$(OBJDIR)/3rdparty/glslang/glslang/MachineIndependent/preprocessor/Pp.o \
	$(OBJDIR)/3rdparty/glslang/glslang/MachineIndependent/preprocessor/PpAtom.o \
	$(OBJDIR)/3rdparty/glslang/glslang/MachineIndependent/preprocessor/PpContext.o \
	$(OBJDIR)/3rdparty/glslang/glslang/MachineIndependent/preprocessor/PpScanner.o \
	$(OBJDIR)/3rdparty/glslang/glslang/MachineIndependent/preprocessor/PpTokens.o \
	$(OBJDIR)/3rdparty/glslang/glslang/MachineIndependent/propagateNoContraction.o \
	$(OBJDIR)/3rdparty/glslang/glslang/MachineIndependent/reflection.o \
	$(OBJDIR)/3rdparty/glslang/glslang/OSDependent/Unix/ossource.o \
	$(OBJDIR)/3rdparty/glslang/glslang/OSDependent/Web/glslang.js.o \
	$(OBJDIR)/3rdparty/glslang/hlsl/hlslAttributes.o \
	$(OBJDIR)/3rdparty/glslang/hlsl/hlslGrammar.o \
	$(OBJDIR)/3rdparty/glslang/hlsl/hlslOpMap.o \
	$(OBJDIR)/3rdparty/glslang/hlsl/hlslParseHelper.o \
	$(OBJDIR)/3rdparty/glslang/hlsl/hlslParseables.o \
	$(OBJDIR)/3rdparty/glslang/hlsl/hlslScanContext.o \
	$(OBJDIR)/3rdparty/glslang/hlsl/hlslTokenStream.o \
	$(OBJDIR)/3rdparty/glslang/hlsl/pch.o \

  define PREBUILDCMDS
  endef
  define PRELINKCMDS
  endef
  define POSTBUILDCMDS
  endef
endif

ifeq ($(config),debug64)
  OBJDIR              = ../../win64_mingw-gcc/obj/x64/Debug/glslang
  TARGETDIR           = ../../win64_mingw-gcc/bin
  TARGET              = $(TARGETDIR)/libglslangDebug.a
  DEFINES            += -D__STDC_LIMIT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_CONSTANT_MACROS -D_DEBUG -DWIN32 -DMINGW_HAS_SECURE_API=1 -DENABLE_OPT=1 -DENABLE_HLSL=1
  INCLUDES           += -I"../../../../bx/include/compat/mingw" -I"../../../3rdparty/glslang" -I"../../../3rdparty/spirv-tools/include" -I"../../../3rdparty/spirv-tools/source"
  ALL_CPPFLAGS       += $(CPPFLAGS) -MMD -MP -MP $(DEFINES) $(INCLUDES)
  ALL_ASMFLAGS       += $(ASMFLAGS) $(CFLAGS) $(ALL_CPPFLAGS) $(ARCH) -Wall -Wextra -ffast-math -fomit-frame-pointer -g -m64 -Wshadow -Wunused-value -fdata-sections -ffunction-sections -msse2 -Wundef -m64 -Wno-ignored-qualifiers -Wno-implicit-fallthrough -Wno-missing-field-initializers -Wno-reorder -Wno-return-type -Wno-shadow -Wno-sign-compare -Wno-switch -Wno-undef -Wno-unknown-pragmas -Wno-unused-function -Wno-unused-parameter -Wno-unused-variable -fno-strict-aliasing
  ALL_CFLAGS         += $(CFLAGS) $(ALL_CPPFLAGS) $(ARCH) -Wall -Wextra -ffast-math -fomit-frame-pointer -g -m64 -Wshadow -Wunused-value -fdata-sections -ffunction-sections -msse2 -Wundef -m64 -Wno-ignored-qualifiers -Wno-implicit-fallthrough -Wno-missing-field-initializers -Wno-reorder -Wno-return-type -Wno-shadow -Wno-sign-compare -Wno-switch -Wno-undef -Wno-unknown-pragmas -Wno-unused-function -Wno-unused-parameter -Wno-unused-variable -fno-strict-aliasing
  ALL_CXXFLAGS       += $(CXXFLAGS) $(CFLAGS) $(ALL_CPPFLAGS) $(ARCH) -Wall -Wextra -ffast-math -fomit-frame-pointer -g -m64 -std=c++14 -fno-rtti -fno-exceptions -Wshadow -Wunused-value -fdata-sections -ffunction-sections -msse2 -Wundef -m64 -Wno-ignored-qualifiers -Wno-implicit-fallthrough -Wno-missing-field-initializers -Wno-reorder -Wno-return-type -Wno-shadow -Wno-sign-compare -Wno-switch -Wno-undef -Wno-unknown-pragmas -Wno-unused-function -Wno-unused-parameter -Wno-unused-variable -fno-strict-aliasing
  ALL_OBJCFLAGS      += $(CFLAGS) $(ALL_CPPFLAGS) $(ARCH) -Wall -Wextra -ffast-math -fomit-frame-pointer -g -m64 -Wshadow -Wunused-value -fdata-sections -ffunction-sections -msse2 -Wundef -m64 -Wno-ignored-qualifiers -Wno-implicit-fallthrough -Wno-missing-field-initializers -Wno-reorder -Wno-return-type -Wno-shadow -Wno-sign-compare -Wno-switch -Wno-undef -Wno-unknown-pragmas -Wno-unused-function -Wno-unused-parameter -Wno-unused-variable -fno-strict-aliasing
  ALL_OBJCPPFLAGS    += $(CXXFLAGS) $(CFLAGS) $(ALL_CPPFLAGS) $(ARCH) -Wall -Wextra -ffast-math -fomit-frame-pointer -g -m64 -std=c++14 -fno-rtti -fno-exceptions -Wshadow -Wunused-value -fdata-sections -ffunction-sections -msse2 -Wundef -m64 -Wno-ignored-qualifiers -Wno-implicit-fallthrough -Wno-missing-field-initializers -Wno-reorder -Wno-return-type -Wno-shadow -Wno-sign-compare -Wno-switch -Wno-undef -Wno-unknown-pragmas -Wno-unused-function -Wno-unused-parameter -Wno-unused-variable -fno-strict-aliasing
  ALL_RESFLAGS       += $(RESFLAGS) $(DEFINES) $(INCLUDES)
  ALL_LDFLAGS        += $(LDFLAGS) -L"../../../3rdparty/lib/win64_mingw-gcc" -m64 -Wl,--gc-sections -static -static-libgcc -static-libstdc++
  LIBDEPS            +=
  LDDEPS             +=
  LDRESP              =
  LIBS               += $(LDDEPS)
  EXTERNAL_LIBS      +=
  LINKOBJS            = $(OBJECTS)
  LINKCMD             = $(AR)  -rcs $(TARGET)
  OBJRESP             =
  OBJECTS := \
	$(OBJDIR)/3rdparty/glslang/OGLCompilersDLL/InitializeDll.o \
	$(OBJDIR)/3rdparty/glslang/SPIRV/GlslangToSpv.o \
	$(OBJDIR)/3rdparty/glslang/SPIRV/InReadableOrder.o \
	$(OBJDIR)/3rdparty/glslang/SPIRV/Logger.o \
	$(OBJDIR)/3rdparty/glslang/SPIRV/SPVRemapper.o \
	$(OBJDIR)/3rdparty/glslang/SPIRV/SpvBuilder.o \
	$(OBJDIR)/3rdparty/glslang/SPIRV/SpvPostProcess.o \
	$(OBJDIR)/3rdparty/glslang/SPIRV/SpvTools.o \
	$(OBJDIR)/3rdparty/glslang/SPIRV/disassemble.o \
	$(OBJDIR)/3rdparty/glslang/SPIRV/doc.o \
	$(OBJDIR)/3rdparty/glslang/glslang/GenericCodeGen/CodeGen.o \
	$(OBJDIR)/3rdparty/glslang/glslang/GenericCodeGen/Link.o \
	$(OBJDIR)/3rdparty/glslang/glslang/MachineIndependent/Constant.o \
	$(OBJDIR)/3rdparty/glslang/glslang/MachineIndependent/InfoSink.o \
	$(OBJDIR)/3rdparty/glslang/glslang/MachineIndependent/Initialize.o \
	$(OBJDIR)/3rdparty/glslang/glslang/MachineIndependent/IntermTraverse.o \
	$(OBJDIR)/3rdparty/glslang/glslang/MachineIndependent/Intermediate.o \
	$(OBJDIR)/3rdparty/glslang/glslang/MachineIndependent/ParseContextBase.o \
	$(OBJDIR)/3rdparty/glslang/glslang/MachineIndependent/ParseHelper.o \
	$(OBJDIR)/3rdparty/glslang/glslang/MachineIndependent/PoolAlloc.o \
	$(OBJDIR)/3rdparty/glslang/glslang/MachineIndependent/RemoveTree.o \
	$(OBJDIR)/3rdparty/glslang/glslang/MachineIndependent/Scan.o \
	$(OBJDIR)/3rdparty/glslang/glslang/MachineIndependent/ShaderLang.o \
	$(OBJDIR)/3rdparty/glslang/glslang/MachineIndependent/SymbolTable.o \
	$(OBJDIR)/3rdparty/glslang/glslang/MachineIndependent/Versions.o \
	$(OBJDIR)/3rdparty/glslang/glslang/MachineIndependent/attribute.o \
	$(OBJDIR)/3rdparty/glslang/glslang/MachineIndependent/glslang_tab.o \
	$(OBJDIR)/3rdparty/glslang/glslang/MachineIndependent/intermOut.o \
	$(OBJDIR)/3rdparty/glslang/glslang/MachineIndependent/iomapper.o \
	$(OBJDIR)/3rdparty/glslang/glslang/MachineIndependent/limits.o \
	$(OBJDIR)/3rdparty/glslang/glslang/MachineIndependent/linkValidate.o \
	$(OBJDIR)/3rdparty/glslang/glslang/MachineIndependent/parseConst.o \
	$(OBJDIR)/3rdparty/glslang/glslang/MachineIndependent/pch.o \
	$(OBJDIR)/3rdparty/glslang/glslang/MachineIndependent/preprocessor/Pp.o \
	$(OBJDIR)/3rdparty/glslang/glslang/MachineIndependent/preprocessor/PpAtom.o \
	$(OBJDIR)/3rdparty/glslang/glslang/MachineIndependent/preprocessor/PpContext.o \
	$(OBJDIR)/3rdparty/glslang/glslang/MachineIndependent/preprocessor/PpScanner.o \
	$(OBJDIR)/3rdparty/glslang/glslang/MachineIndependent/preprocessor/PpTokens.o \
	$(OBJDIR)/3rdparty/glslang/glslang/MachineIndependent/propagateNoContraction.o \
	$(OBJDIR)/3rdparty/glslang/glslang/MachineIndependent/reflection.o \
	$(OBJDIR)/3rdparty/glslang/glslang/OSDependent/Unix/ossource.o \
	$(OBJDIR)/3rdparty/glslang/glslang/OSDependent/Web/glslang.js.o \
	$(OBJDIR)/3rdparty/glslang/hlsl/hlslAttributes.o \
	$(OBJDIR)/3rdparty/glslang/hlsl/hlslGrammar.o \
	$(OBJDIR)/3rdparty/glslang/hlsl/hlslOpMap.o \
	$(OBJDIR)/3rdparty/glslang/hlsl/hlslParseHelper.o \
	$(OBJDIR)/3rdparty/glslang/hlsl/hlslParseables.o \
	$(OBJDIR)/3rdparty/glslang/hlsl/hlslScanContext.o \
	$(OBJDIR)/3rdparty/glslang/hlsl/hlslTokenStream.o \
	$(OBJDIR)/3rdparty/glslang/hlsl/pch.o \

  define PREBUILDCMDS
  endef
  define PRELINKCMDS
  endef
  define POSTBUILDCMDS
  endef
endif

ifeq ($(config),release64)
  OBJDIR              = ../../win64_mingw-gcc/obj/x64/Release/glslang
  TARGETDIR           = ../../win64_mingw-gcc/bin
  TARGET              = $(TARGETDIR)/libglslangRelease.a
  DEFINES            += -D__STDC_LIMIT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_CONSTANT_MACROS -DNDEBUG -DWIN32 -DMINGW_HAS_SECURE_API=1 -DENABLE_OPT=1 -DENABLE_HLSL=1
  INCLUDES           += -I"../../../../bx/include/compat/mingw" -I"../../../3rdparty/glslang" -I"../../../3rdparty/spirv-tools/include" -I"../../../3rdparty/spirv-tools/source"
  ALL_CPPFLAGS       += $(CPPFLAGS) -MMD -MP -MP $(DEFINES) $(INCLUDES)
  ALL_ASMFLAGS       += $(ASMFLAGS) $(CFLAGS) $(ALL_CPPFLAGS) $(ARCH) -Wall -Wextra -ffast-math -fomit-frame-pointer -g -O3 -m64 -Wshadow -Wunused-value -fdata-sections -ffunction-sections -msse2 -Wundef -m64 -Wno-ignored-qualifiers -Wno-implicit-fallthrough -Wno-missing-field-initializers -Wno-reorder -Wno-return-type -Wno-shadow -Wno-sign-compare -Wno-switch -Wno-undef -Wno-unknown-pragmas -Wno-unused-function -Wno-unused-parameter -Wno-unused-variable -fno-strict-aliasing
  ALL_CFLAGS         += $(CFLAGS) $(ALL_CPPFLAGS) $(ARCH) -Wall -Wextra -ffast-math -fomit-frame-pointer -g -O3 -m64 -Wshadow -Wunused-value -fdata-sections -ffunction-sections -msse2 -Wundef -m64 -Wno-ignored-qualifiers -Wno-implicit-fallthrough -Wno-missing-field-initializers -Wno-reorder -Wno-return-type -Wno-shadow -Wno-sign-compare -Wno-switch -Wno-undef -Wno-unknown-pragmas -Wno-unused-function -Wno-unused-parameter -Wno-unused-variable -fno-strict-aliasing
  ALL_CXXFLAGS       += $(CXXFLAGS) $(CFLAGS) $(ALL_CPPFLAGS) $(ARCH) -Wall -Wextra -ffast-math -fomit-frame-pointer -g -O3 -m64 -std=c++14 -fno-rtti -fno-exceptions -Wshadow -Wunused-value -fdata-sections -ffunction-sections -msse2 -Wundef -m64 -Wno-ignored-qualifiers -Wno-implicit-fallthrough -Wno-missing-field-initializers -Wno-reorder -Wno-return-type -Wno-shadow -Wno-sign-compare -Wno-switch -Wno-undef -Wno-unknown-pragmas -Wno-unused-function -Wno-unused-parameter -Wno-unused-variable -fno-strict-aliasing
  ALL_OBJCFLAGS      += $(CFLAGS) $(ALL_CPPFLAGS) $(ARCH) -Wall -Wextra -ffast-math -fomit-frame-pointer -g -O3 -m64 -Wshadow -Wunused-value -fdata-sections -ffunction-sections -msse2 -Wundef -m64 -Wno-ignored-qualifiers -Wno-implicit-fallthrough -Wno-missing-field-initializers -Wno-reorder -Wno-return-type -Wno-shadow -Wno-sign-compare -Wno-switch -Wno-undef -Wno-unknown-pragmas -Wno-unused-function -Wno-unused-parameter -Wno-unused-variable -fno-strict-aliasing
  ALL_OBJCPPFLAGS    += $(CXXFLAGS) $(CFLAGS) $(ALL_CPPFLAGS) $(ARCH) -Wall -Wextra -ffast-math -fomit-frame-pointer -g -O3 -m64 -std=c++14 -fno-rtti -fno-exceptions -Wshadow -Wunused-value -fdata-sections -ffunction-sections -msse2 -Wundef -m64 -Wno-ignored-qualifiers -Wno-implicit-fallthrough -Wno-missing-field-initializers -Wno-reorder -Wno-return-type -Wno-shadow -Wno-sign-compare -Wno-switch -Wno-undef -Wno-unknown-pragmas -Wno-unused-function -Wno-unused-parameter -Wno-unused-variable -fno-strict-aliasing
  ALL_RESFLAGS       += $(RESFLAGS) $(DEFINES) $(INCLUDES)
  ALL_LDFLAGS        += $(LDFLAGS) -L"../../../3rdparty/lib/win64_mingw-gcc" -m64 -Wl,--gc-sections -static -static-libgcc -static-libstdc++
  LIBDEPS            +=
  LDDEPS             +=
  LDRESP              =
  LIBS               += $(LDDEPS)
  EXTERNAL_LIBS      +=
  LINKOBJS            = $(OBJECTS)
  LINKCMD             = $(AR)  -rcs $(TARGET)
  OBJRESP             =
  OBJECTS := \
	$(OBJDIR)/3rdparty/glslang/OGLCompilersDLL/InitializeDll.o \
	$(OBJDIR)/3rdparty/glslang/SPIRV/GlslangToSpv.o \
	$(OBJDIR)/3rdparty/glslang/SPIRV/InReadableOrder.o \
	$(OBJDIR)/3rdparty/glslang/SPIRV/Logger.o \
	$(OBJDIR)/3rdparty/glslang/SPIRV/SPVRemapper.o \
	$(OBJDIR)/3rdparty/glslang/SPIRV/SpvBuilder.o \
	$(OBJDIR)/3rdparty/glslang/SPIRV/SpvPostProcess.o \
	$(OBJDIR)/3rdparty/glslang/SPIRV/SpvTools.o \
	$(OBJDIR)/3rdparty/glslang/SPIRV/disassemble.o \
	$(OBJDIR)/3rdparty/glslang/SPIRV/doc.o \
	$(OBJDIR)/3rdparty/glslang/glslang/GenericCodeGen/CodeGen.o \
	$(OBJDIR)/3rdparty/glslang/glslang/GenericCodeGen/Link.o \
	$(OBJDIR)/3rdparty/glslang/glslang/MachineIndependent/Constant.o \
	$(OBJDIR)/3rdparty/glslang/glslang/MachineIndependent/InfoSink.o \
	$(OBJDIR)/3rdparty/glslang/glslang/MachineIndependent/Initialize.o \
	$(OBJDIR)/3rdparty/glslang/glslang/MachineIndependent/IntermTraverse.o \
	$(OBJDIR)/3rdparty/glslang/glslang/MachineIndependent/Intermediate.o \
	$(OBJDIR)/3rdparty/glslang/glslang/MachineIndependent/ParseContextBase.o \
	$(OBJDIR)/3rdparty/glslang/glslang/MachineIndependent/ParseHelper.o \
	$(OBJDIR)/3rdparty/glslang/glslang/MachineIndependent/PoolAlloc.o \
	$(OBJDIR)/3rdparty/glslang/glslang/MachineIndependent/RemoveTree.o \
	$(OBJDIR)/3rdparty/glslang/glslang/MachineIndependent/Scan.o \
	$(OBJDIR)/3rdparty/glslang/glslang/MachineIndependent/ShaderLang.o \
	$(OBJDIR)/3rdparty/glslang/glslang/MachineIndependent/SymbolTable.o \
	$(OBJDIR)/3rdparty/glslang/glslang/MachineIndependent/Versions.o \
	$(OBJDIR)/3rdparty/glslang/glslang/MachineIndependent/attribute.o \
	$(OBJDIR)/3rdparty/glslang/glslang/MachineIndependent/glslang_tab.o \
	$(OBJDIR)/3rdparty/glslang/glslang/MachineIndependent/intermOut.o \
	$(OBJDIR)/3rdparty/glslang/glslang/MachineIndependent/iomapper.o \
	$(OBJDIR)/3rdparty/glslang/glslang/MachineIndependent/limits.o \
	$(OBJDIR)/3rdparty/glslang/glslang/MachineIndependent/linkValidate.o \
	$(OBJDIR)/3rdparty/glslang/glslang/MachineIndependent/parseConst.o \
	$(OBJDIR)/3rdparty/glslang/glslang/MachineIndependent/pch.o \
	$(OBJDIR)/3rdparty/glslang/glslang/MachineIndependent/preprocessor/Pp.o \
	$(OBJDIR)/3rdparty/glslang/glslang/MachineIndependent/preprocessor/PpAtom.o \
	$(OBJDIR)/3rdparty/glslang/glslang/MachineIndependent/preprocessor/PpContext.o \
	$(OBJDIR)/3rdparty/glslang/glslang/MachineIndependent/preprocessor/PpScanner.o \
	$(OBJDIR)/3rdparty/glslang/glslang/MachineIndependent/preprocessor/PpTokens.o \
	$(OBJDIR)/3rdparty/glslang/glslang/MachineIndependent/propagateNoContraction.o \
	$(OBJDIR)/3rdparty/glslang/glslang/MachineIndependent/reflection.o \
	$(OBJDIR)/3rdparty/glslang/glslang/OSDependent/Unix/ossource.o \
	$(OBJDIR)/3rdparty/glslang/glslang/OSDependent/Web/glslang.js.o \
	$(OBJDIR)/3rdparty/glslang/hlsl/hlslAttributes.o \
	$(OBJDIR)/3rdparty/glslang/hlsl/hlslGrammar.o \
	$(OBJDIR)/3rdparty/glslang/hlsl/hlslOpMap.o \
	$(OBJDIR)/3rdparty/glslang/hlsl/hlslParseHelper.o \
	$(OBJDIR)/3rdparty/glslang/hlsl/hlslParseables.o \
	$(OBJDIR)/3rdparty/glslang/hlsl/hlslScanContext.o \
	$(OBJDIR)/3rdparty/glslang/hlsl/hlslTokenStream.o \
	$(OBJDIR)/3rdparty/glslang/hlsl/pch.o \

  define PREBUILDCMDS
  endef
  define PRELINKCMDS
  endef
  define POSTBUILDCMDS
  endef
endif

ifeq ($(config),debug)
  OBJDIR              = obj/Debug/glslang
  TARGETDIR           = ../../../scripts
  TARGET              = $(TARGETDIR)/libglslangDebug.a
  DEFINES            += -D__STDC_LIMIT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_CONSTANT_MACROS -D_DEBUG -DWIN32 -DMINGW_HAS_SECURE_API=1 -DENABLE_OPT=1 -DENABLE_HLSL=1
  INCLUDES           += -I"../../../../bx/include/compat/mingw" -I"../../../3rdparty/glslang" -I"../../../3rdparty/spirv-tools/include" -I"../../../3rdparty/spirv-tools/source"
  ALL_CPPFLAGS       += $(CPPFLAGS) -MMD -MP -MP $(DEFINES) $(INCLUDES)
  ALL_ASMFLAGS       += $(ASMFLAGS) $(CFLAGS) $(ALL_CPPFLAGS) $(ARCH) -Wall -Wextra -ffast-math -fomit-frame-pointer -g -Wshadow -Wunused-value -fdata-sections -ffunction-sections -msse2 -Wundef -Wno-ignored-qualifiers -Wno-implicit-fallthrough -Wno-missing-field-initializers -Wno-reorder -Wno-return-type -Wno-shadow -Wno-sign-compare -Wno-switch -Wno-undef -Wno-unknown-pragmas -Wno-unused-function -Wno-unused-parameter -Wno-unused-variable -fno-strict-aliasing
  ALL_CFLAGS         += $(CFLAGS) $(ALL_CPPFLAGS) $(ARCH) -Wall -Wextra -ffast-math -fomit-frame-pointer -g -Wshadow -Wunused-value -fdata-sections -ffunction-sections -msse2 -Wundef -Wno-ignored-qualifiers -Wno-implicit-fallthrough -Wno-missing-field-initializers -Wno-reorder -Wno-return-type -Wno-shadow -Wno-sign-compare -Wno-switch -Wno-undef -Wno-unknown-pragmas -Wno-unused-function -Wno-unused-parameter -Wno-unused-variable -fno-strict-aliasing
  ALL_CXXFLAGS       += $(CXXFLAGS) $(CFLAGS) $(ALL_CPPFLAGS) $(ARCH) -Wall -Wextra -ffast-math -fomit-frame-pointer -g -std=c++14 -fno-rtti -fno-exceptions -Wshadow -Wunused-value -fdata-sections -ffunction-sections -msse2 -Wundef -Wno-ignored-qualifiers -Wno-implicit-fallthrough -Wno-missing-field-initializers -Wno-reorder -Wno-return-type -Wno-shadow -Wno-sign-compare -Wno-switch -Wno-undef -Wno-unknown-pragmas -Wno-unused-function -Wno-unused-parameter -Wno-unused-variable -fno-strict-aliasing
  ALL_OBJCFLAGS      += $(CFLAGS) $(ALL_CPPFLAGS) $(ARCH) -Wall -Wextra -ffast-math -fomit-frame-pointer -g -Wshadow -Wunused-value -fdata-sections -ffunction-sections -msse2 -Wundef -Wno-ignored-qualifiers -Wno-implicit-fallthrough -Wno-missing-field-initializers -Wno-reorder -Wno-return-type -Wno-shadow -Wno-sign-compare -Wno-switch -Wno-undef -Wno-unknown-pragmas -Wno-unused-function -Wno-unused-parameter -Wno-unused-variable -fno-strict-aliasing
  ALL_OBJCPPFLAGS    += $(CXXFLAGS) $(CFLAGS) $(ALL_CPPFLAGS) $(ARCH) -Wall -Wextra -ffast-math -fomit-frame-pointer -g -std=c++14 -fno-rtti -fno-exceptions -Wshadow -Wunused-value -fdata-sections -ffunction-sections -msse2 -Wundef -Wno-ignored-qualifiers -Wno-implicit-fallthrough -Wno-missing-field-initializers -Wno-reorder -Wno-return-type -Wno-shadow -Wno-sign-compare -Wno-switch -Wno-undef -Wno-unknown-pragmas -Wno-unused-function -Wno-unused-parameter -Wno-unused-variable -fno-strict-aliasing
  ALL_RESFLAGS       += $(RESFLAGS) $(DEFINES) $(INCLUDES)
  ALL_LDFLAGS        += $(LDFLAGS) -Wl,--gc-sections -static -static-libgcc -static-libstdc++
  LIBDEPS            +=
  LDDEPS             +=
  LDRESP              =
  LIBS               += $(LDDEPS)
  EXTERNAL_LIBS      +=
  LINKOBJS            = $(OBJECTS)
  LINKCMD             = $(AR)  -rcs $(TARGET)
  OBJRESP             =
  OBJECTS := \
	$(OBJDIR)/3rdparty/glslang/OGLCompilersDLL/InitializeDll.o \
	$(OBJDIR)/3rdparty/glslang/SPIRV/GlslangToSpv.o \
	$(OBJDIR)/3rdparty/glslang/SPIRV/InReadableOrder.o \
	$(OBJDIR)/3rdparty/glslang/SPIRV/Logger.o \
	$(OBJDIR)/3rdparty/glslang/SPIRV/SPVRemapper.o \
	$(OBJDIR)/3rdparty/glslang/SPIRV/SpvBuilder.o \
	$(OBJDIR)/3rdparty/glslang/SPIRV/SpvPostProcess.o \
	$(OBJDIR)/3rdparty/glslang/SPIRV/SpvTools.o \
	$(OBJDIR)/3rdparty/glslang/SPIRV/disassemble.o \
	$(OBJDIR)/3rdparty/glslang/SPIRV/doc.o \
	$(OBJDIR)/3rdparty/glslang/glslang/GenericCodeGen/CodeGen.o \
	$(OBJDIR)/3rdparty/glslang/glslang/GenericCodeGen/Link.o \
	$(OBJDIR)/3rdparty/glslang/glslang/MachineIndependent/Constant.o \
	$(OBJDIR)/3rdparty/glslang/glslang/MachineIndependent/InfoSink.o \
	$(OBJDIR)/3rdparty/glslang/glslang/MachineIndependent/Initialize.o \
	$(OBJDIR)/3rdparty/glslang/glslang/MachineIndependent/IntermTraverse.o \
	$(OBJDIR)/3rdparty/glslang/glslang/MachineIndependent/Intermediate.o \
	$(OBJDIR)/3rdparty/glslang/glslang/MachineIndependent/ParseContextBase.o \
	$(OBJDIR)/3rdparty/glslang/glslang/MachineIndependent/ParseHelper.o \
	$(OBJDIR)/3rdparty/glslang/glslang/MachineIndependent/PoolAlloc.o \
	$(OBJDIR)/3rdparty/glslang/glslang/MachineIndependent/RemoveTree.o \
	$(OBJDIR)/3rdparty/glslang/glslang/MachineIndependent/Scan.o \
	$(OBJDIR)/3rdparty/glslang/glslang/MachineIndependent/ShaderLang.o \
	$(OBJDIR)/3rdparty/glslang/glslang/MachineIndependent/SymbolTable.o \
	$(OBJDIR)/3rdparty/glslang/glslang/MachineIndependent/Versions.o \
	$(OBJDIR)/3rdparty/glslang/glslang/MachineIndependent/attribute.o \
	$(OBJDIR)/3rdparty/glslang/glslang/MachineIndependent/glslang_tab.o \
	$(OBJDIR)/3rdparty/glslang/glslang/MachineIndependent/intermOut.o \
	$(OBJDIR)/3rdparty/glslang/glslang/MachineIndependent/iomapper.o \
	$(OBJDIR)/3rdparty/glslang/glslang/MachineIndependent/limits.o \
	$(OBJDIR)/3rdparty/glslang/glslang/MachineIndependent/linkValidate.o \
	$(OBJDIR)/3rdparty/glslang/glslang/MachineIndependent/parseConst.o \
	$(OBJDIR)/3rdparty/glslang/glslang/MachineIndependent/pch.o \
	$(OBJDIR)/3rdparty/glslang/glslang/MachineIndependent/preprocessor/Pp.o \
	$(OBJDIR)/3rdparty/glslang/glslang/MachineIndependent/preprocessor/PpAtom.o \
	$(OBJDIR)/3rdparty/glslang/glslang/MachineIndependent/preprocessor/PpContext.o \
	$(OBJDIR)/3rdparty/glslang/glslang/MachineIndependent/preprocessor/PpScanner.o \
	$(OBJDIR)/3rdparty/glslang/glslang/MachineIndependent/preprocessor/PpTokens.o \
	$(OBJDIR)/3rdparty/glslang/glslang/MachineIndependent/propagateNoContraction.o \
	$(OBJDIR)/3rdparty/glslang/glslang/MachineIndependent/reflection.o \
	$(OBJDIR)/3rdparty/glslang/glslang/OSDependent/Unix/ossource.o \
	$(OBJDIR)/3rdparty/glslang/glslang/OSDependent/Web/glslang.js.o \
	$(OBJDIR)/3rdparty/glslang/hlsl/hlslAttributes.o \
	$(OBJDIR)/3rdparty/glslang/hlsl/hlslGrammar.o \
	$(OBJDIR)/3rdparty/glslang/hlsl/hlslOpMap.o \
	$(OBJDIR)/3rdparty/glslang/hlsl/hlslParseHelper.o \
	$(OBJDIR)/3rdparty/glslang/hlsl/hlslParseables.o \
	$(OBJDIR)/3rdparty/glslang/hlsl/hlslScanContext.o \
	$(OBJDIR)/3rdparty/glslang/hlsl/hlslTokenStream.o \
	$(OBJDIR)/3rdparty/glslang/hlsl/pch.o \

  define PREBUILDCMDS
  endef
  define PRELINKCMDS
  endef
  define POSTBUILDCMDS
  endef
endif

ifeq ($(config),release)
  OBJDIR              = obj/Release/glslang
  TARGETDIR           = ../../../scripts
  TARGET              = $(TARGETDIR)/libglslangRelease.a
  DEFINES            += -D__STDC_LIMIT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_CONSTANT_MACROS -DNDEBUG -DWIN32 -DMINGW_HAS_SECURE_API=1 -DENABLE_OPT=1 -DENABLE_HLSL=1
  INCLUDES           += -I"../../../../bx/include/compat/mingw" -I"../../../3rdparty/glslang" -I"../../../3rdparty/spirv-tools/include" -I"../../../3rdparty/spirv-tools/source"
  ALL_CPPFLAGS       += $(CPPFLAGS) -MMD -MP -MP $(DEFINES) $(INCLUDES)
  ALL_ASMFLAGS       += $(ASMFLAGS) $(CFLAGS) $(ALL_CPPFLAGS) $(ARCH) -Wall -Wextra -ffast-math -fomit-frame-pointer -g -O3 -Wshadow -Wunused-value -fdata-sections -ffunction-sections -msse2 -Wundef -Wno-ignored-qualifiers -Wno-implicit-fallthrough -Wno-missing-field-initializers -Wno-reorder -Wno-return-type -Wno-shadow -Wno-sign-compare -Wno-switch -Wno-undef -Wno-unknown-pragmas -Wno-unused-function -Wno-unused-parameter -Wno-unused-variable -fno-strict-aliasing
  ALL_CFLAGS         += $(CFLAGS) $(ALL_CPPFLAGS) $(ARCH) -Wall -Wextra -ffast-math -fomit-frame-pointer -g -O3 -Wshadow -Wunused-value -fdata-sections -ffunction-sections -msse2 -Wundef -Wno-ignored-qualifiers -Wno-implicit-fallthrough -Wno-missing-field-initializers -Wno-reorder -Wno-return-type -Wno-shadow -Wno-sign-compare -Wno-switch -Wno-undef -Wno-unknown-pragmas -Wno-unused-function -Wno-unused-parameter -Wno-unused-variable -fno-strict-aliasing
  ALL_CXXFLAGS       += $(CXXFLAGS) $(CFLAGS) $(ALL_CPPFLAGS) $(ARCH) -Wall -Wextra -ffast-math -fomit-frame-pointer -g -O3 -std=c++14 -fno-rtti -fno-exceptions -Wshadow -Wunused-value -fdata-sections -ffunction-sections -msse2 -Wundef -Wno-ignored-qualifiers -Wno-implicit-fallthrough -Wno-missing-field-initializers -Wno-reorder -Wno-return-type -Wno-shadow -Wno-sign-compare -Wno-switch -Wno-undef -Wno-unknown-pragmas -Wno-unused-function -Wno-unused-parameter -Wno-unused-variable -fno-strict-aliasing
  ALL_OBJCFLAGS      += $(CFLAGS) $(ALL_CPPFLAGS) $(ARCH) -Wall -Wextra -ffast-math -fomit-frame-pointer -g -O3 -Wshadow -Wunused-value -fdata-sections -ffunction-sections -msse2 -Wundef -Wno-ignored-qualifiers -Wno-implicit-fallthrough -Wno-missing-field-initializers -Wno-reorder -Wno-return-type -Wno-shadow -Wno-sign-compare -Wno-switch -Wno-undef -Wno-unknown-pragmas -Wno-unused-function -Wno-unused-parameter -Wno-unused-variable -fno-strict-aliasing
  ALL_OBJCPPFLAGS    += $(CXXFLAGS) $(CFLAGS) $(ALL_CPPFLAGS) $(ARCH) -Wall -Wextra -ffast-math -fomit-frame-pointer -g -O3 -std=c++14 -fno-rtti -fno-exceptions -Wshadow -Wunused-value -fdata-sections -ffunction-sections -msse2 -Wundef -Wno-ignored-qualifiers -Wno-implicit-fallthrough -Wno-missing-field-initializers -Wno-reorder -Wno-return-type -Wno-shadow -Wno-sign-compare -Wno-switch -Wno-undef -Wno-unknown-pragmas -Wno-unused-function -Wno-unused-parameter -Wno-unused-variable -fno-strict-aliasing
  ALL_RESFLAGS       += $(RESFLAGS) $(DEFINES) $(INCLUDES)
  ALL_LDFLAGS        += $(LDFLAGS) -Wl,--gc-sections -static -static-libgcc -static-libstdc++
  LIBDEPS            +=
  LDDEPS             +=
  LDRESP              =
  LIBS               += $(LDDEPS)
  EXTERNAL_LIBS      +=
  LINKOBJS            = $(OBJECTS)
  LINKCMD             = $(AR)  -rcs $(TARGET)
  OBJRESP             =
  OBJECTS := \
	$(OBJDIR)/3rdparty/glslang/OGLCompilersDLL/InitializeDll.o \
	$(OBJDIR)/3rdparty/glslang/SPIRV/GlslangToSpv.o \
	$(OBJDIR)/3rdparty/glslang/SPIRV/InReadableOrder.o \
	$(OBJDIR)/3rdparty/glslang/SPIRV/Logger.o \
	$(OBJDIR)/3rdparty/glslang/SPIRV/SPVRemapper.o \
	$(OBJDIR)/3rdparty/glslang/SPIRV/SpvBuilder.o \
	$(OBJDIR)/3rdparty/glslang/SPIRV/SpvPostProcess.o \
	$(OBJDIR)/3rdparty/glslang/SPIRV/SpvTools.o \
	$(OBJDIR)/3rdparty/glslang/SPIRV/disassemble.o \
	$(OBJDIR)/3rdparty/glslang/SPIRV/doc.o \
	$(OBJDIR)/3rdparty/glslang/glslang/GenericCodeGen/CodeGen.o \
	$(OBJDIR)/3rdparty/glslang/glslang/GenericCodeGen/Link.o \
	$(OBJDIR)/3rdparty/glslang/glslang/MachineIndependent/Constant.o \
	$(OBJDIR)/3rdparty/glslang/glslang/MachineIndependent/InfoSink.o \
	$(OBJDIR)/3rdparty/glslang/glslang/MachineIndependent/Initialize.o \
	$(OBJDIR)/3rdparty/glslang/glslang/MachineIndependent/IntermTraverse.o \
	$(OBJDIR)/3rdparty/glslang/glslang/MachineIndependent/Intermediate.o \
	$(OBJDIR)/3rdparty/glslang/glslang/MachineIndependent/ParseContextBase.o \
	$(OBJDIR)/3rdparty/glslang/glslang/MachineIndependent/ParseHelper.o \
	$(OBJDIR)/3rdparty/glslang/glslang/MachineIndependent/PoolAlloc.o \
	$(OBJDIR)/3rdparty/glslang/glslang/MachineIndependent/RemoveTree.o \
	$(OBJDIR)/3rdparty/glslang/glslang/MachineIndependent/Scan.o \
	$(OBJDIR)/3rdparty/glslang/glslang/MachineIndependent/ShaderLang.o \
	$(OBJDIR)/3rdparty/glslang/glslang/MachineIndependent/SymbolTable.o \
	$(OBJDIR)/3rdparty/glslang/glslang/MachineIndependent/Versions.o \
	$(OBJDIR)/3rdparty/glslang/glslang/MachineIndependent/attribute.o \
	$(OBJDIR)/3rdparty/glslang/glslang/MachineIndependent/glslang_tab.o \
	$(OBJDIR)/3rdparty/glslang/glslang/MachineIndependent/intermOut.o \
	$(OBJDIR)/3rdparty/glslang/glslang/MachineIndependent/iomapper.o \
	$(OBJDIR)/3rdparty/glslang/glslang/MachineIndependent/limits.o \
	$(OBJDIR)/3rdparty/glslang/glslang/MachineIndependent/linkValidate.o \
	$(OBJDIR)/3rdparty/glslang/glslang/MachineIndependent/parseConst.o \
	$(OBJDIR)/3rdparty/glslang/glslang/MachineIndependent/pch.o \
	$(OBJDIR)/3rdparty/glslang/glslang/MachineIndependent/preprocessor/Pp.o \
	$(OBJDIR)/3rdparty/glslang/glslang/MachineIndependent/preprocessor/PpAtom.o \
	$(OBJDIR)/3rdparty/glslang/glslang/MachineIndependent/preprocessor/PpContext.o \
	$(OBJDIR)/3rdparty/glslang/glslang/MachineIndependent/preprocessor/PpScanner.o \
	$(OBJDIR)/3rdparty/glslang/glslang/MachineIndependent/preprocessor/PpTokens.o \
	$(OBJDIR)/3rdparty/glslang/glslang/MachineIndependent/propagateNoContraction.o \
	$(OBJDIR)/3rdparty/glslang/glslang/MachineIndependent/reflection.o \
	$(OBJDIR)/3rdparty/glslang/glslang/OSDependent/Unix/ossource.o \
	$(OBJDIR)/3rdparty/glslang/glslang/OSDependent/Web/glslang.js.o \
	$(OBJDIR)/3rdparty/glslang/hlsl/hlslAttributes.o \
	$(OBJDIR)/3rdparty/glslang/hlsl/hlslGrammar.o \
	$(OBJDIR)/3rdparty/glslang/hlsl/hlslOpMap.o \
	$(OBJDIR)/3rdparty/glslang/hlsl/hlslParseHelper.o \
	$(OBJDIR)/3rdparty/glslang/hlsl/hlslParseables.o \
	$(OBJDIR)/3rdparty/glslang/hlsl/hlslScanContext.o \
	$(OBJDIR)/3rdparty/glslang/hlsl/hlslTokenStream.o \
	$(OBJDIR)/3rdparty/glslang/hlsl/pch.o \

  define PREBUILDCMDS
  endef
  define PRELINKCMDS
  endef
  define POSTBUILDCMDS
  endef
endif

OBJDIRS := \
	$(OBJDIR) \
	$(OBJDIR)/3rdparty/glslang/OGLCompilersDLL \
	$(OBJDIR)/3rdparty/glslang/SPIRV \
	$(OBJDIR)/3rdparty/glslang/glslang/GenericCodeGen \
	$(OBJDIR)/3rdparty/glslang/glslang/MachineIndependent \
	$(OBJDIR)/3rdparty/glslang/glslang/MachineIndependent/preprocessor \
	$(OBJDIR)/3rdparty/glslang/glslang/OSDependent/Unix \
	$(OBJDIR)/3rdparty/glslang/glslang/OSDependent/Web \
	$(OBJDIR)/3rdparty/glslang/hlsl \

RESOURCES := \

.PHONY: clean prebuild prelink

all: $(OBJDIRS) $(TARGETDIR) prebuild prelink $(TARGET)
	@:

$(TARGET): $(GCH) $(OBJECTS) $(LIBDEPS) $(EXTERNAL_LIBS) $(RESOURCES) $(OBJRESP) $(LDRESP) | $(TARGETDIR) $(OBJDIRS)
	@echo Archiving glslang
ifeq (posix,$(SHELLTYPE))
	$(SILENT) rm -f  $(TARGET)
else
	$(SILENT) if exist $(subst /,\\,$(TARGET)) del $(subst /,\\,$(TARGET))
endif
	$(SILENT) $(LINKCMD) $(LINKOBJS) 2>&1 > /dev/null | sed -e '/.o) has no symbols$$/d'
	$(POSTBUILDCMDS)

$(TARGETDIR):
	@echo Creating $(TARGETDIR)
	-$(call MKDIR,$(TARGETDIR))

$(OBJDIRS):
	@echo Creating $(@)
	-$(call MKDIR,$@)

clean:
	@echo Cleaning glslang
ifeq (posix,$(SHELLTYPE))
	$(SILENT) rm -f  $(TARGET)
	$(SILENT) rm -rf $(OBJDIR)
else
	$(SILENT) if exist $(subst /,\\,$(TARGET)) del $(subst /,\\,$(TARGET))
	$(SILENT) if exist $(subst /,\\,$(OBJDIR)) rmdir /s /q $(subst /,\\,$(OBJDIR))
endif

prebuild:
	$(PREBUILDCMDS)

prelink:
	$(PRELINKCMDS)

ifneq (,$(PCH))
$(GCH): $(PCH) $(MAKEFILE) | $(OBJDIR)
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) -x c++-header $(DEFINES) $(INCLUDES) -o "$@" -c "$<"

$(GCH_OBJC): $(PCH) $(MAKEFILE) | $(OBJDIR)
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_OBJCPPFLAGS) -x objective-c++-header $(DEFINES) $(INCLUDES) -o "$@" -c "$<"
endif

ifneq (,$(OBJRESP))
$(OBJRESP): $(OBJECTS) | $(TARGETDIR) $(OBJDIRS)
	$(SILENT) echo $^
	$(SILENT) echo $^ > $@
endif

ifneq (,$(LDRESP))
$(LDRESP): $(LDDEPS) | $(TARGETDIR) $(OBJDIRS)
	$(SILENT) echo $^
	$(SILENT) echo $^ > $@
endif

$(OBJDIR)/3rdparty/glslang/OGLCompilersDLL/InitializeDll.o: ../../../3rdparty/glslang/OGLCompilersDLL/InitializeDll.cpp $(GCH) $(MAKEFILE) | $(OBJDIR)/3rdparty/glslang/OGLCompilersDLL
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -c "$<"

$(OBJDIR)/3rdparty/glslang/SPIRV/GlslangToSpv.o: ../../../3rdparty/glslang/SPIRV/GlslangToSpv.cpp $(GCH) $(MAKEFILE) | $(OBJDIR)/3rdparty/glslang/SPIRV
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -c "$<"

$(OBJDIR)/3rdparty/glslang/SPIRV/InReadableOrder.o: ../../../3rdparty/glslang/SPIRV/InReadableOrder.cpp $(GCH) $(MAKEFILE) | $(OBJDIR)/3rdparty/glslang/SPIRV
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -c "$<"

$(OBJDIR)/3rdparty/glslang/SPIRV/Logger.o: ../../../3rdparty/glslang/SPIRV/Logger.cpp $(GCH) $(MAKEFILE) | $(OBJDIR)/3rdparty/glslang/SPIRV
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -c "$<"

$(OBJDIR)/3rdparty/glslang/SPIRV/SPVRemapper.o: ../../../3rdparty/glslang/SPIRV/SPVRemapper.cpp $(GCH) $(MAKEFILE) | $(OBJDIR)/3rdparty/glslang/SPIRV
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -c "$<"

$(OBJDIR)/3rdparty/glslang/SPIRV/SpvBuilder.o: ../../../3rdparty/glslang/SPIRV/SpvBuilder.cpp $(GCH) $(MAKEFILE) | $(OBJDIR)/3rdparty/glslang/SPIRV
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -c "$<"

$(OBJDIR)/3rdparty/glslang/SPIRV/SpvPostProcess.o: ../../../3rdparty/glslang/SPIRV/SpvPostProcess.cpp $(GCH) $(MAKEFILE) | $(OBJDIR)/3rdparty/glslang/SPIRV
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -c "$<"

$(OBJDIR)/3rdparty/glslang/SPIRV/SpvTools.o: ../../../3rdparty/glslang/SPIRV/SpvTools.cpp $(GCH) $(MAKEFILE) | $(OBJDIR)/3rdparty/glslang/SPIRV
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -c "$<"

$(OBJDIR)/3rdparty/glslang/SPIRV/disassemble.o: ../../../3rdparty/glslang/SPIRV/disassemble.cpp $(GCH) $(MAKEFILE) | $(OBJDIR)/3rdparty/glslang/SPIRV
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -c "$<"

$(OBJDIR)/3rdparty/glslang/SPIRV/doc.o: ../../../3rdparty/glslang/SPIRV/doc.cpp $(GCH) $(MAKEFILE) | $(OBJDIR)/3rdparty/glslang/SPIRV
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -c "$<"

$(OBJDIR)/3rdparty/glslang/glslang/GenericCodeGen/CodeGen.o: ../../../3rdparty/glslang/glslang/GenericCodeGen/CodeGen.cpp $(GCH) $(MAKEFILE) | $(OBJDIR)/3rdparty/glslang/glslang/GenericCodeGen
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -c "$<"

$(OBJDIR)/3rdparty/glslang/glslang/GenericCodeGen/Link.o: ../../../3rdparty/glslang/glslang/GenericCodeGen/Link.cpp $(GCH) $(MAKEFILE) | $(OBJDIR)/3rdparty/glslang/glslang/GenericCodeGen
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -c "$<"

$(OBJDIR)/3rdparty/glslang/glslang/MachineIndependent/Constant.o: ../../../3rdparty/glslang/glslang/MachineIndependent/Constant.cpp $(GCH) $(MAKEFILE) | $(OBJDIR)/3rdparty/glslang/glslang/MachineIndependent
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -c "$<"

$(OBJDIR)/3rdparty/glslang/glslang/MachineIndependent/InfoSink.o: ../../../3rdparty/glslang/glslang/MachineIndependent/InfoSink.cpp $(GCH) $(MAKEFILE) | $(OBJDIR)/3rdparty/glslang/glslang/MachineIndependent
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -c "$<"

$(OBJDIR)/3rdparty/glslang/glslang/MachineIndependent/Initialize.o: ../../../3rdparty/glslang/glslang/MachineIndependent/Initialize.cpp $(GCH) $(MAKEFILE) | $(OBJDIR)/3rdparty/glslang/glslang/MachineIndependent
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -c "$<"

$(OBJDIR)/3rdparty/glslang/glslang/MachineIndependent/IntermTraverse.o: ../../../3rdparty/glslang/glslang/MachineIndependent/IntermTraverse.cpp $(GCH) $(MAKEFILE) | $(OBJDIR)/3rdparty/glslang/glslang/MachineIndependent
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -c "$<"

$(OBJDIR)/3rdparty/glslang/glslang/MachineIndependent/Intermediate.o: ../../../3rdparty/glslang/glslang/MachineIndependent/Intermediate.cpp $(GCH) $(MAKEFILE) | $(OBJDIR)/3rdparty/glslang/glslang/MachineIndependent
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -c "$<"

$(OBJDIR)/3rdparty/glslang/glslang/MachineIndependent/ParseContextBase.o: ../../../3rdparty/glslang/glslang/MachineIndependent/ParseContextBase.cpp $(GCH) $(MAKEFILE) | $(OBJDIR)/3rdparty/glslang/glslang/MachineIndependent
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -c "$<"

$(OBJDIR)/3rdparty/glslang/glslang/MachineIndependent/ParseHelper.o: ../../../3rdparty/glslang/glslang/MachineIndependent/ParseHelper.cpp $(GCH) $(MAKEFILE) | $(OBJDIR)/3rdparty/glslang/glslang/MachineIndependent
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -c "$<"

$(OBJDIR)/3rdparty/glslang/glslang/MachineIndependent/PoolAlloc.o: ../../../3rdparty/glslang/glslang/MachineIndependent/PoolAlloc.cpp $(GCH) $(MAKEFILE) | $(OBJDIR)/3rdparty/glslang/glslang/MachineIndependent
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -c "$<"

$(OBJDIR)/3rdparty/glslang/glslang/MachineIndependent/RemoveTree.o: ../../../3rdparty/glslang/glslang/MachineIndependent/RemoveTree.cpp $(GCH) $(MAKEFILE) | $(OBJDIR)/3rdparty/glslang/glslang/MachineIndependent
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -c "$<"

$(OBJDIR)/3rdparty/glslang/glslang/MachineIndependent/Scan.o: ../../../3rdparty/glslang/glslang/MachineIndependent/Scan.cpp $(GCH) $(MAKEFILE) | $(OBJDIR)/3rdparty/glslang/glslang/MachineIndependent
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -c "$<"

$(OBJDIR)/3rdparty/glslang/glslang/MachineIndependent/ShaderLang.o: ../../../3rdparty/glslang/glslang/MachineIndependent/ShaderLang.cpp $(GCH) $(MAKEFILE) | $(OBJDIR)/3rdparty/glslang/glslang/MachineIndependent
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -c "$<"

$(OBJDIR)/3rdparty/glslang/glslang/MachineIndependent/SymbolTable.o: ../../../3rdparty/glslang/glslang/MachineIndependent/SymbolTable.cpp $(GCH) $(MAKEFILE) | $(OBJDIR)/3rdparty/glslang/glslang/MachineIndependent
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -c "$<"

$(OBJDIR)/3rdparty/glslang/glslang/MachineIndependent/Versions.o: ../../../3rdparty/glslang/glslang/MachineIndependent/Versions.cpp $(GCH) $(MAKEFILE) | $(OBJDIR)/3rdparty/glslang/glslang/MachineIndependent
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -c "$<"

$(OBJDIR)/3rdparty/glslang/glslang/MachineIndependent/attribute.o: ../../../3rdparty/glslang/glslang/MachineIndependent/attribute.cpp $(GCH) $(MAKEFILE) | $(OBJDIR)/3rdparty/glslang/glslang/MachineIndependent
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -c "$<"

$(OBJDIR)/3rdparty/glslang/glslang/MachineIndependent/glslang_tab.o: ../../../3rdparty/glslang/glslang/MachineIndependent/glslang_tab.cpp $(GCH) $(MAKEFILE) | $(OBJDIR)/3rdparty/glslang/glslang/MachineIndependent
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -c "$<"

$(OBJDIR)/3rdparty/glslang/glslang/MachineIndependent/intermOut.o: ../../../3rdparty/glslang/glslang/MachineIndependent/intermOut.cpp $(GCH) $(MAKEFILE) | $(OBJDIR)/3rdparty/glslang/glslang/MachineIndependent
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -c "$<"

$(OBJDIR)/3rdparty/glslang/glslang/MachineIndependent/iomapper.o: ../../../3rdparty/glslang/glslang/MachineIndependent/iomapper.cpp $(GCH) $(MAKEFILE) | $(OBJDIR)/3rdparty/glslang/glslang/MachineIndependent
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -c "$<"

$(OBJDIR)/3rdparty/glslang/glslang/MachineIndependent/limits.o: ../../../3rdparty/glslang/glslang/MachineIndependent/limits.cpp $(GCH) $(MAKEFILE) | $(OBJDIR)/3rdparty/glslang/glslang/MachineIndependent
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -c "$<"

$(OBJDIR)/3rdparty/glslang/glslang/MachineIndependent/linkValidate.o: ../../../3rdparty/glslang/glslang/MachineIndependent/linkValidate.cpp $(GCH) $(MAKEFILE) | $(OBJDIR)/3rdparty/glslang/glslang/MachineIndependent
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -c "$<"

$(OBJDIR)/3rdparty/glslang/glslang/MachineIndependent/parseConst.o: ../../../3rdparty/glslang/glslang/MachineIndependent/parseConst.cpp $(GCH) $(MAKEFILE) | $(OBJDIR)/3rdparty/glslang/glslang/MachineIndependent
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -c "$<"

$(OBJDIR)/3rdparty/glslang/glslang/MachineIndependent/pch.o: ../../../3rdparty/glslang/glslang/MachineIndependent/pch.cpp $(GCH) $(MAKEFILE) | $(OBJDIR)/3rdparty/glslang/glslang/MachineIndependent
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -c "$<"

$(OBJDIR)/3rdparty/glslang/glslang/MachineIndependent/preprocessor/Pp.o: ../../../3rdparty/glslang/glslang/MachineIndependent/preprocessor/Pp.cpp $(GCH) $(MAKEFILE) | $(OBJDIR)/3rdparty/glslang/glslang/MachineIndependent/preprocessor
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -c "$<"

$(OBJDIR)/3rdparty/glslang/glslang/MachineIndependent/preprocessor/PpAtom.o: ../../../3rdparty/glslang/glslang/MachineIndependent/preprocessor/PpAtom.cpp $(GCH) $(MAKEFILE) | $(OBJDIR)/3rdparty/glslang/glslang/MachineIndependent/preprocessor
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -c "$<"

$(OBJDIR)/3rdparty/glslang/glslang/MachineIndependent/preprocessor/PpContext.o: ../../../3rdparty/glslang/glslang/MachineIndependent/preprocessor/PpContext.cpp $(GCH) $(MAKEFILE) | $(OBJDIR)/3rdparty/glslang/glslang/MachineIndependent/preprocessor
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -c "$<"

$(OBJDIR)/3rdparty/glslang/glslang/MachineIndependent/preprocessor/PpScanner.o: ../../../3rdparty/glslang/glslang/MachineIndependent/preprocessor/PpScanner.cpp $(GCH) $(MAKEFILE) | $(OBJDIR)/3rdparty/glslang/glslang/MachineIndependent/preprocessor
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -c "$<"

$(OBJDIR)/3rdparty/glslang/glslang/MachineIndependent/preprocessor/PpTokens.o: ../../../3rdparty/glslang/glslang/MachineIndependent/preprocessor/PpTokens.cpp $(GCH) $(MAKEFILE) | $(OBJDIR)/3rdparty/glslang/glslang/MachineIndependent/preprocessor
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -c "$<"

$(OBJDIR)/3rdparty/glslang/glslang/MachineIndependent/propagateNoContraction.o: ../../../3rdparty/glslang/glslang/MachineIndependent/propagateNoContraction.cpp $(GCH) $(MAKEFILE) | $(OBJDIR)/3rdparty/glslang/glslang/MachineIndependent
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -c "$<"

$(OBJDIR)/3rdparty/glslang/glslang/MachineIndependent/reflection.o: ../../../3rdparty/glslang/glslang/MachineIndependent/reflection.cpp $(GCH) $(MAKEFILE) | $(OBJDIR)/3rdparty/glslang/glslang/MachineIndependent
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -c "$<"

$(OBJDIR)/3rdparty/glslang/glslang/OSDependent/Unix/ossource.o: ../../../3rdparty/glslang/glslang/OSDependent/Unix/ossource.cpp $(GCH) $(MAKEFILE) | $(OBJDIR)/3rdparty/glslang/glslang/OSDependent/Unix
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -c "$<"

$(OBJDIR)/3rdparty/glslang/glslang/OSDependent/Web/glslang.js.o: ../../../3rdparty/glslang/glslang/OSDependent/Web/glslang.js.cpp $(GCH) $(MAKEFILE) | $(OBJDIR)/3rdparty/glslang/glslang/OSDependent/Web
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -c "$<"

$(OBJDIR)/3rdparty/glslang/hlsl/hlslAttributes.o: ../../../3rdparty/glslang/hlsl/hlslAttributes.cpp $(GCH) $(MAKEFILE) | $(OBJDIR)/3rdparty/glslang/hlsl
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -c "$<"

$(OBJDIR)/3rdparty/glslang/hlsl/hlslGrammar.o: ../../../3rdparty/glslang/hlsl/hlslGrammar.cpp $(GCH) $(MAKEFILE) | $(OBJDIR)/3rdparty/glslang/hlsl
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -c "$<"

$(OBJDIR)/3rdparty/glslang/hlsl/hlslOpMap.o: ../../../3rdparty/glslang/hlsl/hlslOpMap.cpp $(GCH) $(MAKEFILE) | $(OBJDIR)/3rdparty/glslang/hlsl
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -c "$<"

$(OBJDIR)/3rdparty/glslang/hlsl/hlslParseHelper.o: ../../../3rdparty/glslang/hlsl/hlslParseHelper.cpp $(GCH) $(MAKEFILE) | $(OBJDIR)/3rdparty/glslang/hlsl
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -c "$<"

$(OBJDIR)/3rdparty/glslang/hlsl/hlslParseables.o: ../../../3rdparty/glslang/hlsl/hlslParseables.cpp $(GCH) $(MAKEFILE) | $(OBJDIR)/3rdparty/glslang/hlsl
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -c "$<"

$(OBJDIR)/3rdparty/glslang/hlsl/hlslScanContext.o: ../../../3rdparty/glslang/hlsl/hlslScanContext.cpp $(GCH) $(MAKEFILE) | $(OBJDIR)/3rdparty/glslang/hlsl
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -c "$<"

$(OBJDIR)/3rdparty/glslang/hlsl/hlslTokenStream.o: ../../../3rdparty/glslang/hlsl/hlslTokenStream.cpp $(GCH) $(MAKEFILE) | $(OBJDIR)/3rdparty/glslang/hlsl
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -c "$<"

$(OBJDIR)/3rdparty/glslang/hlsl/pch.o: ../../../3rdparty/glslang/hlsl/pch.cpp $(GCH) $(MAKEFILE) | $(OBJDIR)/3rdparty/glslang/hlsl
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -c "$<"

-include $(OBJECTS:%.o=%.d)
ifneq (,$(PCH))
  -include $(OBJDIR)/$(notdir $(PCH)).d
  -include $(OBJDIR)/$(notdir $(PCH))_objc.d
endif
